{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/james/Desktop/Moringa-J/Class-Assist/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { flushSync } from \"react-dom\";\n\nfunction AccountContainer() {\n  _s();\n\n  const [transactions, setTransactions] = React.useState([]);\n  const [copyTransactions, setCopytransaction] = React.useState([]);\n\n  function fetcher() {\n    fetch(\"http://localhost:8001/transactions\").then(resp => resp.json()).then(result => {\n      setCopytransaction(result);\n      setTransactions(result);\n    });\n  }\n\n  React.useEffect(() => {\n    fetcher();\n  }, []);\n\n  function handleSubmit(obj) {\n    console.log(obj);\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ ...obj,\n        \"amount\": parseInt(obj.amount)\n      })\n    }).then(() => fetcher());\n  }\n\n  function handleChange(event) {\n    let searching = event.target.value.toLowerCase();\n    setTransactions(copyTransactions.filter(val => val.description.toLowerCase().includes(searching)));\n  }\n\n  function handleSort(e) {\n    console.log(e.target.textContent);\n\n    function compare(a, b) {\n      if (a.last_nom < b.last_nom) {\n        return -1;\n      }\n\n      if (a.last_nom > b.last_nom) {\n        return 1;\n      }\n\n      return 0;\n    } // objs.sort( compare );\n\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      handleChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      submit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionsList, {\n      transactions: transactions,\n      handleSort: handleSort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AccountContainer, \"/ft7ae/51x2arA1aM/GYEsWJoAg=\");\n\n_c = AccountContainer;\nexport default AccountContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountContainer\");","map":{"version":3,"sources":["/home/james/Desktop/Moringa-J/Class-Assist/Phase-2-Hooks-Code-Challenge-Bank-of-Flatiron-100421/code-challenge/src/components/AccountContainer.js"],"names":["React","TransactionsList","Search","AddTransactionForm","flushSync","AccountContainer","transactions","setTransactions","useState","copyTransactions","setCopytransaction","fetcher","fetch","then","resp","json","result","useEffect","handleSubmit","obj","console","log","method","headers","body","JSON","stringify","parseInt","amount","handleChange","event","searching","target","value","toLowerCase","filter","val","description","includes","handleSort","e","textContent","compare","a","b","last_nom"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,SAAT,QAA0B,WAA1B;;AAEA,SAASC,gBAAT,GAA4B;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACC,gBAAD,EAAmBC,kBAAnB,IAAyCV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAA/C;;AACA,WAASG,OAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADhB,EAEGF,IAFH,CAEQG,MAAM,IAAI;AACdN,MAAAA,kBAAkB,CAACM,MAAD,CAAlB;AACAT,MAAAA,eAAe,CAACS,MAAD,CAAf;AACD,KALH;AAMD;;AAEDhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpBN,IAAAA,OAAO;AACR,GAFD,EAEG,EAFH;;AAIA,WAASO,YAAT,CAAsBC,GAAtB,EAA2B;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAP,IAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CU,MAAAA,MAAM,EAAE,MADkC;AAE1CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAFiC;AAG1CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe,EAAE,GAAGP,GAAL;AAAU,kBAAUQ,QAAQ,CAACR,GAAG,CAACS,MAAL;AAA5B,OAAf;AAHoC,KAAvC,CAAL,CAIGf,IAJH,CAIQ,MAAMF,OAAO,EAJrB;AAKD;;AAED,WAASkB,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAIC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,WAAnB,EAAhB;AACA3B,IAAAA,eAAe,CAACE,gBAAgB,CAAC0B,MAAjB,CAAwBC,GAAG,IACzCA,GAAG,CAACC,WAAJ,CAAgBH,WAAhB,GAA8BI,QAA9B,CAAuCP,SAAvC,CADc,CAAD,CAAf;AAID;;AACD,WAASQ,UAAT,CAAoBC,CAApB,EAAuB;AACrBpB,IAAAA,OAAO,CAACC,GAAR,CAAYmB,CAAC,CAACR,MAAF,CAASS,WAArB;;AACA,aAASC,OAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAyB;AACvB,UAAKD,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAApB,EAA8B;AAC5B,eAAO,CAAC,CAAR;AACD;;AACD,UAAKF,CAAC,CAACE,QAAF,GAAaD,CAAC,CAACC,QAApB,EAA8B;AAC5B,eAAO,CAAP;AACD;;AACD,aAAO,CAAP;AACD,KAVoB,CAYrB;;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAEhB;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,kBAAD;AACE,MAAA,MAAM,EAAEX;AADV;AAAA;AAAA;AAAA;AAAA,YAFF,eAKE,QAAC,gBAAD;AACE,MAAA,YAAY,EAAEZ,YADhB;AAEE,MAAA,UAAU,EAAEiC;AAFd;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GA1DQlC,gB;;KAAAA,gB;AA4DT,eAAeA,gBAAf","sourcesContent":["import React from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\nimport { flushSync } from \"react-dom\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = React.useState([]);\n  const [copyTransactions, setCopytransaction] = React.useState([]);\n  function fetcher() {\n    fetch(\"http://localhost:8001/transactions\")\n      .then(resp => resp.json())\n      .then(result => {\n        setCopytransaction(result)\n        setTransactions(result)\n      })\n  }\n\n  React.useEffect(() => {\n    fetcher()\n  }, [])\n\n  function handleSubmit(obj) {\n    console.log(obj);\n    fetch(\"http://localhost:8001/transactions\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ ...obj, \"amount\": parseInt(obj.amount) })\n    }).then(() => fetcher())\n  }\n\n  function handleChange(event) {\n    let searching = event.target.value.toLowerCase();\n    setTransactions(copyTransactions.filter(val =>\n      val.description.toLowerCase().includes(searching)\n    )\n    );\n  }\n  function handleSort(e) {\n    console.log(e.target.textContent);\n    function compare( a, b ) {\n      if ( a.last_nom < b.last_nom ){\n        return -1;\n      }\n      if ( a.last_nom > b.last_nom ){\n        return 1;\n      }\n      return 0;\n    }\n\n    // objs.sort( compare );\n  }\n  return (\n    <div>\n      <Search handleChange={handleChange} />\n      <AddTransactionForm\n        submit={handleSubmit}\n      />\n      <TransactionsList\n        transactions={transactions}\n        handleSort={handleSort}\n      />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n"]},"metadata":{},"sourceType":"module"}